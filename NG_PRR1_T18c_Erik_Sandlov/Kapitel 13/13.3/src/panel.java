/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author erik.sandlov
 */
public class panel extends javax.swing.JPanel {

    /**
     * Creates new form panel
     */
    public panel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateBtn = new javax.swing.JButton();
        generateField = new javax.swing.JTextField();
        sortBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        displayField = new javax.swing.JTextField();

        generateBtn.setText("Generera");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        sortBtn.setText("Sortera");
        sortBtn.setEnabled(false);
        sortBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBtnActionPerformed(evt);
            }
        });

        searchBtn.setText("SÃ¶k");
        searchBtn.setEnabled(false);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchField.setEditable(false);

        displayField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(displayField)
                    .addComponent(searchField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sortBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(generateBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateBtn)
                    .addComponent(generateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sortBtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
static int[] list;
    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        // TODO add your handling code here:

        list = new int[Integer.valueOf(this.generateField.getText())];
        for (int i = 0; i < list.length; i++) {
            list[i] = (int) (Math.random() * 10000) + 1;
        }
        this.sortBtn.setEnabled(true);
        System.out.println("test");
    }//GEN-LAST:event_generateBtnActionPerformed

    private void sortBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBtnActionPerformed
        // TODO add your handling code here:
        selectionSort();
        this.searchField.setEnabled(true);
        this.searchField.setEnabled(true);
        this.searchField.setEditable(true);
        this.searchBtn.setEnabled(true);
        for (int i = 0; i < list.length; i++) {
            System.out.println(""+list[i]);
        }
    }//GEN-LAST:event_sortBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        this.displayField.setEnabled(true);
        int index = binarySearch(Integer.valueOf(this.searchField.getText()));
        this.displayField.setText("");
        this.displayField.setText(""+index+1);
    }//GEN-LAST:event_searchBtnActionPerformed
    public static int binarySearch(int value) {
    int min = 0;
    int max = list.length - 1;
    while (min <= max) {
        int middle = (min + max) / 2;
        if (value == list[middle]) {
            return middle;
        } else if (value > list[middle]) {
            min = middle + 1;
        } else { // value < list[middle]
            max = middle - 1;
        } 
    }
    return -1;
}

    public static void selectionSort() {
        for (int i = 0; i < list.length; i++) {
            int mindex = i;
            for (int j = i + 1; j < list.length; j++) {
                if (list[mindex] > list[j]) {
                    mindex = j;
                }
            }
            int temp = list[i];
            list[i] = list[mindex];
            list[mindex] = temp;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField displayField;
    private javax.swing.JButton generateBtn;
    private javax.swing.JTextField generateField;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton sortBtn;
    // End of variables declaration//GEN-END:variables
}
